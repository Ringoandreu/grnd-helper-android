// ==UserScript==
// @name         –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫ –∂–∞–ª–æ–± (Android)
// @namespace    Grnd Helper for Android By Ringo
// @version      3.3
// @description  –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –∂–∞–ª–æ–±—ã –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥ (–º—É—Ç, –±–∞–Ω, –≤–∞—Ä–Ω –∏ —Ç. –¥.)
// @author       Ringo
// @match        https://grnd.gg/admin/complaints
// @match        https://grnd.gg/admin/complaints/*
// @updateURL    https://raw.githubusercontent.com/Ringoandreu/grnd-helper-android/main/GrndHelper-Android.user.js
// @downloadURL  https://raw.githubusercontent.com/Ringoandreu/grnd-helper-android/main/GrndHelper-Android.user.js
// @grant        GM_addStyle
// @grant        GM_getResourceURL
// @grant        GM_xmlhttpRequest
// ==/UserScript==

(function() {
    'use strict';

    // –ü–æ–¥–∫–ª—é—á–∞–µ–º Font Awesome
    GM_addStyle(`
        @import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css');
    `);

    console.log("üöÄ Grnd Helper for Android –∑–∞–ø—É—â–µ–Ω!");

    // –ù–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –≤–µ—Ä–¥–∏–∫—Ç–æ–≤
    const verdictTemplates = [
        {
            "category": "default",
            "description": "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∂–∞–ª–æ–±—ã",
            "name": "–ñ–∞–ª–æ–±–∞ —Å –Ω–∞—Ä—É—à–µ–Ω–∏–µ–º –ø—Ä–∞–≤–∏–ª",
            "text": "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {complaintSender}.\n–ñ–∞–ª–æ–±–∞ {complaintNumber} –Ω–µ –ø–æ–¥–ª–µ–∂–∏—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—é, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ —Å –Ω–∞—Ä—É—à–µ–Ω–∏–µ–º –ø—Ä–∞–≤–∏–ª –ø–æ–¥–∞—á–∏ –∂–∞–ª–æ–±. –ü—Ä–æ—Å–∏–º –≤–∞—Å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—É—é –∂–∞–ª–æ–±—É. –ó–∞–∫—Ä—ã—Ç–æ."
        },
        {
            "category": "default",
            "description": "–ñ–∞–ª–æ–±–∞ –±–µ–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏",
            "name": "–ü—É—Å—Ç—ã—à–∫–∞",
            "text": "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, —É–≤–∞–∂–∞–µ–º—ã–π {complaintSender}.\n\n–ñ–∞–ª–æ–±–∞ {complaintNumber} –±—ã–ª–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞ –∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞. –ü—Ä–æ—Å–∏–º –í–∞—Å —Å–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∂–∞–ª–æ–±—É —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º —Å–∏—Ç—É–∞—Ü–∏–∏ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞–º–∏ (–ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏). –ó–∞–∫—Ä—ã—Ç–æ."
        },
        {
            "category": "default",
            "description": "–ñ–∞–ª–æ–±–∞ –ø—Ä–æ–¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∞",
            "name": "–î—É–±–ª–∏–∫–∞—Ç",
            "text": "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, —É–≤–∞–∂–∞–µ–º—ã–π {complaintSender}.\n–í–∞—à–∞ –∂–∞–ª–æ–±–∞ {complaintNumber} –±—ã–ª–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞ –∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞, —Ç–∞–∫ –∫–∞–∫ —è–≤–ª—è–µ—Ç—Å—è –¥—É–±–ª–∏–∫–∞—Ç–æ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–π. –ó–∞–∫—Ä—ã—Ç–æ."
        },
        {
            "category": "default",
            "description": "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤",
            "name": "–ù–µ—Ö–≤–∞—Ç–∫–∞ –¥–æ–∫-–≤",
            "text": "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, —É–≤–∞–∂–∞–µ–º—ã–π {complaintSender}. –í–∞—à–∞ –∂–∞–ª–æ–±–∞ {complaintNumber} –±—ã–ª–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞ –∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –ø–æ –ø—Ä–∏—á–∏–Ω–µ: –Ω–µ—Ö–≤–∞—Ç–∫–∞ –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤. –ó–∞–∫—Ä—ã—Ç–æ."
        },
        {
            "category": "player",
            "description": "–ü–æ—Å–ª–µ–¥—É–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –∞–∫–∫–∞—É—Ç–Ω—Ç–∞",
            "name": "–û–¥–æ–±—Ä–µ–Ω–æ (ban)",
            "text": "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, —É–≤–∞–∂–∞–µ–º—ã–π {complaintSender}. –í–∞—à–∞ –∂–∞–ª–æ–±–∞ {complaintNumber} –±—ã–ª–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞ –∏ –æ–¥–æ–±—Ä–µ–Ω–∞. –ò–≥—Ä–æ–∫ {accusedNick} –±—É–¥–µ—Ç –Ω–∞–∫–∞–∑–∞–Ω –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π –∞–∫–∫–∞—É–Ω—Ç–∞ –Ω–∞ N –¥–Ω–µ–π –∑–∞ \"–ø—Ä–∏—á–∏–Ω–∞\"."
        },
        {
            "category": "default",
            "description": "–ü–æ—Å–ª–µ–¥—É–µ—Ç JAIL",
            "name": "–û–¥–æ–±—Ä–µ–Ω–æ (–¥–µ–º–æ—Ä–≥–∞–Ω)",
            "text": "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, —É–≤–∞–∂–∞–µ–º—ã–π {complaintSender}. –í–∞—à–∞ –∂–∞–ª–æ–±–∞ {complaintNumber} –±—ã–ª–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞ –∏ –æ–¥–æ–±—Ä–µ–Ω–∞. –ò–≥—Ä–æ–∫ {accusedNick} –±—É–¥–µ—Ç –Ω–∞–∫–∞–∑–∞–Ω –¥–µ–º–æ—Ä–≥–∞–Ω–æ–º –Ω–∞ N –º–∏–Ω—É—Ç –∑–∞ \"–ø—Ä–∏—á–∏–Ω–∞\"."
        },
        {
            "category": "default",
            "description": "–ü–æ—Å–ª–µ–¥—É–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —á–∞—Ç–∞",
            "name": "–û–¥–æ–±—Ä–µ–Ω–æ (mute)",
            "text": "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, —É–≤–∞–∂–∞–µ–º—ã–π {complaintSender}. –í–∞—à–∞ –∂–∞–ª–æ–±–∞ {complaintNumber} –±—ã–ª–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞ –∏ –æ–¥–æ–±—Ä–µ–Ω–∞. –ò–≥—Ä–æ–∫ {accusedNick} –±—É–¥–µ—Ç –Ω–∞–∫–∞–∑–∞–Ω –±–ª–æ–∫–∏—Ä–æ–≤–∫–æ–π —á–∞—Ç–∞ –Ω–∞ N –º–∏–Ω—É—Ç –∑–∞ \"–ø—Ä–∏—á–∏–Ω–∞\"."
        },
        {
            "category": "player",
            "description": "–ü–æ—Å–ª–µ–¥—É–µ—Ç –∏–≥—Ä–æ–≤–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ (WARN)",
            "name": "–û–¥–æ–±—Ä–µ–Ω–æ (warn)",
            "text": "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, —É–≤–∞–∂–∞–µ–º—ã–π {complaintSender}. –í–∞—à–∞ –∂–∞–ª–æ–±–∞ {complaintNumber} –±—ã–ª–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞ –∏ –æ–¥–æ–±—Ä–µ–Ω–∞. –ò–≥—Ä–æ–∫ {accusedNick} –±—É–¥–µ—Ç –Ω–∞–∫–∞–∑–∞–Ω –≤–∞—Ä–Ω–æ–º –∑–∞ \"–Ω–∞—Ä—É—à–µ–Ω–∏–µ\""
        },
        {
            "category": "player",
            "description": "–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞—Ä—É—à–∞–µ—Ç",
            "name": "–ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞—Ä—É—à–∞–µ—Ç",
            "text": "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, —É–≤–∞–∂–∞–µ–º—ã–π {complaintSender}. –í–∞—à–∞ –∂–∞–ª–æ–±–∞ {complaintNumber} –±—ã–ª–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∞ –∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞. –ò–≥—Ä–æ–∫ {accusedNick} –Ω–µ –Ω–∞—Ä—É—à–∞–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ –ø—Ä–æ–µ–∫—Ç–∞."
        }
    ];

    function addPunishmentForm() {
        const infoBlock = document.querySelector(".content-info");
        if (!infoBlock) {
            console.error("‚ùå –≠–ª–µ–º–µ–Ω—Ç .content-info –Ω–µ –Ω–∞–π–¥–µ–Ω!");
            return;
        }

        console.log("‚úÖ –ù–∞–π–¥–µ–Ω .content-info, –¥–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É...");

        const formContainer = document.createElement("div");
        formContainer.classList.add("punishment-form");
        formContainer.style.background = "#222";
        formContainer.style.padding = "10px";
        formContainer.style.borderRadius = "8px";
        formContainer.style.color = "white";
        formContainer.style.marginTop = "10px";
        formContainer.style.maxWidth = "300px";
        formContainer.style.fontSize = "14px";
        formContainer.style.position = "relative";

        // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –±–ª–æ–∫–∞
        const header = document.createElement("div");
        header.style.display = "flex";
        header.style.alignItems = "center";
        header.style.marginBottom = "8px";
        header.style.fontSize = "14px";
        header.style.fontWeight = "bold";

        const headerIcon = document.createElement("span");
        headerIcon.innerText = "‚öñÔ∏è";
        headerIcon.style.marginRight = "8px";

        const headerText = document.createElement("span");
        headerText.innerText = "–í—ã–¥–∞—á–∞ –Ω–∞–∫–∞–∑–∞–Ω–∏—è";

        // –ò–∫–æ–Ω–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (–∏—Å–ø–æ–ª—å–∑—É–µ–º Font Awesome)
        const updateIcon = document.createElement("i");
        updateIcon.className = "fas fa-bell"; // –ò–∫–æ–Ω–∫–∞ –∫–æ–ª–æ–∫–æ–ª—å—á–∏–∫–∞
        updateIcon.style.marginLeft = "auto"; // –†–∞–∑–º–µ—â–∞–µ–º –≤ –ø—Ä–∞–≤–æ–º —É–≥–ª—É
        updateIcon.style.cursor = "pointer";
        updateIcon.style.color = "#28a745"; // –ó–µ–ª—ë–Ω—ã–π —Ü–≤–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        updateIcon.style.transition = "color 0.3s ease"; // –ü–ª–∞–≤–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞
        updateIcon.title = "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è";

        // –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –≤ –∑–∞–≥–æ–ª–æ–≤–æ–∫
        header.appendChild(headerIcon);
        header.appendChild(headerText);
        header.appendChild(updateIcon);
        formContainer.appendChild(header);

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
        checkForUpdates(updateIcon);

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∏–∫–æ–Ω–∫—É
        updateIcon.addEventListener("click", () => {
            showUpdateModal(updateIcon);
        });

        // –°–ø–∏—Å–æ–∫ –Ω–∞–∫–∞–∑–∞–Ω–∏–π
        const punishmentSelect = document.createElement("select");
        punishmentSelect.innerHTML = `
            <option value="" disabled selected>–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ</option>
            <option value="offmute">Mute</option>
            <option value="offjail">Jail</option>
            <option value="offban">Ban</option>
            <option value="offwarn">Warn</option>
        `;
        punishmentSelect.style.width = "100%";
        punishmentSelect.style.marginBottom = "8px";
        punishmentSelect.style.background = "#333";
        punishmentSelect.style.color = "#fff";
        punishmentSelect.style.border = "1px solid #444";
        punishmentSelect.style.padding = "5px";
        punishmentSelect.style.borderRadius = "5px";
        punishmentSelect.style.fontSize = "14px";

        // –ü–æ–ª–µ –≤–≤–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏
        const timeInput = document.createElement("input");
        timeInput.type = "number";
        timeInput.placeholder = "–í—Ä–µ–º—è (–º–∏–Ω)";
        timeInput.min = "1";
        timeInput.style.width = "100%";
        timeInput.style.marginBottom = "8px";
        timeInput.style.background = "#333";
        timeInput.style.color = "#fff";
        timeInput.style.border = "1px solid #444";
        timeInput.style.padding = "5px";
        timeInput.style.borderRadius = "5px";
        timeInput.style.fontSize = "14px";

        // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–∞–≤–∏–ª–∞
        const ruleContainer = document.createElement("div");
        ruleContainer.style.position = "relative";
        ruleContainer.style.width = "100%";
        ruleContainer.style.marginBottom = "8px";

        // –ü–æ–ª–µ –≤–≤–æ–¥–∞ –ø—Ä–∞–≤–∏–ª–∞
        const ruleInput = document.createElement("input");
        ruleInput.type = "text";
        ruleInput.placeholder = "–ü—É–Ω–∫—Ç –ø—Ä–∞–≤–∏–ª";
        ruleInput.style.width = "calc(100% - 40px)";
        ruleInput.style.marginRight = "10px";
        ruleInput.style.background = "#333";
        ruleInput.style.color = "#fff";
        ruleInput.style.border = "1px solid #444";
        ruleInput.style.padding = "5px";
        ruleInput.style.borderRadius = "5px";
        ruleInput.style.fontSize = "14px";

        // –ö–Ω–æ–ø–∫–∞-–∏–∫–æ–Ω–∫–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø—Ä–∞–≤–∏–ª–∞
        const ruleDropdownButton = document.createElement("button");
        ruleDropdownButton.innerHTML = "üìú";
        ruleDropdownButton.style.position = "absolute";
        ruleDropdownButton.style.right = "0";
        ruleDropdownButton.style.top = "0";
        ruleDropdownButton.style.border = "none";
        ruleDropdownButton.style.background = "#444";
        ruleDropdownButton.style.color = "#fff";
        ruleDropdownButton.style.cursor = "pointer";
        ruleDropdownButton.style.fontSize = "14px";
        ruleDropdownButton.style.width = "30px";
        ruleDropdownButton.style.height = "30px";
        ruleDropdownButton.style.borderRadius = "5px";

        // –í—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ –ø—Ä–∞–≤–∏–ª
        const ruleDropdown = document.createElement("ul");
        ruleDropdown.style.position = "absolute";
        ruleDropdown.style.top = "100%";
        ruleDropdown.style.left = "0";
        ruleDropdown.style.width = "100%";
        ruleDropdown.style.background = "#333";
        ruleDropdown.style.color = "#fff";
        ruleDropdown.style.border = "1px solid #444";
        ruleDropdown.style.borderRadius = "5px";
        ruleDropdown.style.display = "none";
        ruleDropdown.style.listStyle = "none";
        ruleDropdown.style.padding = "5px 0";
        ruleDropdown.style.maxHeight = "200px";
        ruleDropdown.style.overflowY = "auto";
        ruleDropdown.style.zIndex = "1000";

        // –°–ø–∏—Å–æ–∫ –ø—Ä–∞–≤–∏–ª
        const rules = [
            { code: "2.1 –û–ü", desc: "–û—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è" },
            { code: "2.2 –û–ü", desc: "–§–ª—É–¥" },
            { code: "3.2 –û–ü", desc: "–û–±–º–∞–Ω –∫–ª–µ–≤–µ—Ç–∞ –ê–¥–º." },
            { code: "5.2 –û–ü", desc: "C–æ—Ñ—Ç" },
            { code: "5.4 –û–ü", desc: "–£—Ö–æ–¥ –æ—Ç –†–ü" },
            { code: "5.7 –û–ü", desc: "SK –∂–∏–ª—å—Ü–æ–≤ –¥–æ–º–∞" },
            { code: "SK", desc: "Spawn Kill" },
            { code: "DB", desc: "DriveBy" },
            { code: "DM", desc: "DeathMatch" },
            { code: "UB", desc: "Unrealistic Behavior" },
            { code: "1.1 GZ", desc: "–£–±–∏–π—Å—Ç–≤–æ –≤ GreenZone" }
        ];

        rules.forEach(rule => {
            const listItem = document.createElement("li");
            listItem.innerText = `${rule.code} - ${rule.desc}`;
            listItem.style.padding = "5px 10px";
            listItem.style.cursor = "pointer";
            listItem.style.fontSize = "14px";
            listItem.addEventListener("click", () => {
                ruleInput.value = rule.code;
                ruleDropdown.style.display = "none";
            });
            listItem.addEventListener("mouseenter", () => {
                listItem.style.background = "#444";
            });
            listItem.addEventListener("mouseleave", () => {
                listItem.style.background = "transparent";
            });
            ruleDropdown.appendChild(listItem);
        });

        ruleDropdownButton.addEventListener("click", () => {
            ruleDropdown.style.display = ruleDropdown.style.display === "block" ? "none" : "block";
        });

        document.addEventListener("click", (event) => {
            if (!ruleContainer.contains(event.target)) {
                ruleDropdown.style.display = "none";
            }
        });

        ruleContainer.appendChild(ruleInput);
        ruleContainer.appendChild(ruleDropdownButton);
        ruleContainer.appendChild(ruleDropdown);

        // –ö–Ω–æ–ø–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
        const generateButton = document.createElement("button");
        generateButton.innerText = "–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å";
        generateButton.style.marginTop = "8px";
        generateButton.style.background = "#28a745";
        generateButton.style.color = "white";
        generateButton.style.border = "none";
        generateButton.style.padding = "8px";
        generateButton.style.borderRadius = "5px";
        generateButton.style.width = "100%";
        generateButton.style.cursor = "pointer";
        generateButton.style.fontSize = "14px";
        generateButton.addEventListener("click", () => {
            const selectedPunishment = punishmentSelect.value;
            const time = timeInput.value.trim();
            const rule = ruleInput.value.trim();

            if (!selectedPunishment) {
                showAlert("‚ùå –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ!");
                return;
            }

            if (!rule) {
                showAlert("‚ùå –£–∫–∞–∂–∏—Ç–µ –ø—É–Ω–∫—Ç –ø—Ä–∞–≤–∏–ª!");
                return;
            }

            if (selectedPunishment !== "offwarn" && !time) {
                showAlert("‚ùå –£–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è!");
                return;
            }

            generateCommand(selectedPunishment, time, rule);
        });

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ –Ω–∞–∫–∞–∑–∞–Ω–∏—è
        punishmentSelect.addEventListener("change", () => {
            const selectedPunishment = punishmentSelect.value;
            if (selectedPunishment === "offwarn") {
                timeInput.disabled = true;
                timeInput.placeholder = "–í—Ä–µ–º—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è";
                timeInput.value = "";
            } else if (selectedPunishment === "offban") {
                timeInput.disabled = false;
                timeInput.placeholder = "–í—Ä–µ–º—è (–¥–Ω–µ–π)";
            } else {
                timeInput.disabled = false;
                timeInput.placeholder = "–í—Ä–µ–º—è (–º–∏–Ω)";
            }
        });

        formContainer.append(punishmentSelect, timeInput, ruleContainer, generateButton);
        infoBlock.parentNode.insertBefore(formContainer, infoBlock.nextSibling);

        console.log("‚úÖ –§–æ—Ä–º–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!");

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤–µ—Ä–¥–∏–∫—Ç–∞
        addVerdictButtons(formContainer);
    }

    function generateCommand(type, time, rule) {
        const accusedElement = document.querySelector(".content-info .item:nth-child(3) .title");
        const complaintNumberElement = document.querySelector(".content-info .item:nth-child(1) .title");

        if (!accusedElement || !complaintNumberElement) {
            showAlert("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ.");
            return;
        }

        const accusedNick = accusedElement.textContent.trim();
        const complaintNumber = complaintNumberElement.textContent.replace("# ", "#").trim();
        let command = `/${type} ${accusedNick} ${time ? time + ' ' : ''}${rule} |–ñ–ë ${complaintNumber}`;

        navigator.clipboard.writeText(command).then(() => {
            showAlert("‚úÖ –ö–æ–º–∞–Ω–¥–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞: " + command);
        }).catch(err => {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: ", err);
            showAlert("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã.");
        });
    }

    function showAlert(message) {
        alert(message);
    }

    function addVerdictButtons(formContainer) {
        const verdictButtonsContainer = document.createElement("div");
        verdictButtonsContainer.style.display = "grid";
        verdictButtonsContainer.style.gridTemplateColumns = "repeat(3, 1fr)";
        verdictButtonsContainer.style.gap = "10px";
        verdictButtonsContainer.style.marginLeft = "20px";
        verdictButtonsContainer.style.width = "300px";
        verdictButtonsContainer.style.position = "absolute";
        verdictButtonsContainer.style.right = "-320px";
        verdictButtonsContainer.style.top = "0";

        verdictTemplates.forEach(template => {
            const btn = document.createElement("button");
            btn.innerText = template.name;
            btn.style.background = "#444";
            btn.style.color = "#fff";
            btn.style.border = "none";
            btn.style.padding = "8px";
            btn.style.borderRadius = "5px";
            btn.style.cursor = "pointer";
            btn.style.fontSize = "12px";
            btn.addEventListener("click", () => {
                const complaintSender = document.querySelector(".content-info .item:nth-child(2) .title")?.textContent.trim() || "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";
                const complaintNumber = document.querySelector(".content-info .item:nth-child(1) .title")?.textContent.replace("# ", "#").trim() || "N/A";
                const accusedNick = document.querySelector(".content-info .item:nth-child(3) .title")?.textContent.trim() || "N/A";

                const verdictText = template.text
                    .replace("{complaintSender}", complaintSender)
                    .replace("{complaintNumber}", complaintNumber)
                    .replace("{accusedNick}", accusedNick);

                const verdictInput = document.querySelector(".verdict textarea");
                if (verdictInput) {
                    verdictInput.value = verdictText;
                    btn.style.background = "#28a745";
                    setTimeout(() => {
                        btn.style.background = "#444";
                    }, 150);
                } else {
                    showAlert("‚ùå –ü–æ–ª–µ '–í–∞—à –≤–µ—Ä–¥–∏–∫—Ç' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!");
                }
            });
            verdictButtonsContainer.appendChild(btn);
        });

        formContainer.appendChild(verdictButtonsContainer);
        console.log("‚úÖ –ö–Ω–æ–ø–∫–∏ –≤–µ—Ä–¥–∏–∫—Ç–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã!");
    }

    function checkForUpdates(updateIcon) {
        fetch("https://raw.githubusercontent.com/Ringoandreu/grnd-helper-android/main/GrndHelper-Android.user.js")
            .then(response => response.text())
            .then(scriptContent => {
                const latestVersionMatch = scriptContent.match(/@version\s+([\d.]+)/);
                if (latestVersionMatch && latestVersionMatch[1] !== "3.3") { // –ó–∞–º–µ–Ω–∏—Ç–µ "3.2" –Ω–∞ —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é
                    // –ï—Å–ª–∏ –≤–µ—Ä—Å–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –Ω–æ–≤–µ–µ
                    updateIcon.style.color = "#ff6b6b"; // –ö—Ä–∞—Å–Ω—ã–π —Ü–≤–µ—Ç
                    updateIcon.title = "–î–æ—Å—Ç—É–ø–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ! –ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π.";
                } else {
                    // –ï—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ—Ç
                    updateIcon.style.color = "#28a745"; // –ó–µ–ª—ë–Ω—ã–π —Ü–≤–µ—Ç
                    updateIcon.title = "–£ –≤–∞—Å —Å–∞–º–∞—è –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è.";
                }
            })
            .catch(error => {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π:", error);
            });
    }

function showUpdateModal(updateIcon) {
    fetch("https://raw.githubusercontent.com/Ringoandreu/grnd-helper-android/main/GrndHelper-Android.user.js")
        .then(response => response.text())
        .then(scriptContent => {
            const latestVersionMatch = scriptContent.match(/@version\s+([\d.]+)/);
            const currentVersion = "3.3"; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é

            // –°–æ–∑–¥–∞—ë–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            const modal = document.createElement("div");
            modal.style.position = "fixed"; // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ viewport
            modal.style.top = "50%"; // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏
            modal.style.left = "50%"; // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏
            modal.style.transform = "translate(-50%, -50%)"; // –¢–æ—á–Ω–æ–µ —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ
            modal.style.background = "#333";
            modal.style.padding = "20px";
            modal.style.borderRadius = "10px";
            modal.style.color = "#fff";
            modal.style.zIndex = "10000"; // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –æ–∫–Ω–æ –ø–æ–≤–µ—Ä—Ö –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            modal.style.width = "90%"; // –®–∏—Ä–∏–Ω–∞ –æ–∫–Ω–∞ (90% —ç–∫—Ä–∞–Ω–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤)
            modal.style.maxWidth = "400px"; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞
            modal.style.boxShadow = "0 4px 6px rgba(0, 0, 0, 0.1)";
            modal.style.overflow = "hidden"; // –ß—Ç–æ–±—ã —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–µ –≤—ã—Ö–æ–¥–∏–ª–æ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—ã

            // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            const modalHeader = document.createElement("h3");
            modalHeader.innerText = latestVersionMatch && latestVersionMatch[1] !== currentVersion
                ? "–î–æ—Å—Ç—É–ø–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ!"
                : "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ä—Å–∏–∏";
            modalHeader.style.marginBottom = "20px";
            modalHeader.style.fontSize = "18px";
            modalHeader.style.fontWeight = "bold";

            // –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
            const modalContent = document.createElement("div");
            modalContent.style.marginBottom = "20px";

            if (latestVersionMatch && latestVersionMatch[1] !== currentVersion) {
                // –ï—Å–ª–∏ –µ—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
                fetch("https://raw.githubusercontent.com/Ringoandreu/grnd-helper-android/main/CHANGELOG.md")
                    .then(response => response.text())
                    .then(changelog => {
                        // –ü–∞—Ä—Å–∏–º changelog, —á—Ç–æ–±—ã –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
                        const changelogLines = changelog.split("\n");
                        const latestChanges = [];
                        let isLatestVersion = false;

                        for (const line of changelogLines) {
                            if (line.startsWith("## –í–µ—Ä—Å–∏—è ")) {
                                if (isLatestVersion) break; // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è –ø–æ—Å–ª–µ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏
                                if (line.includes(latestVersionMatch[1])) {
                                    isLatestVersion = true;
                                }
                            }
                            if (isLatestVersion) {
                                latestChanges.push(line);
                            }
                        }

                        modalContent.innerHTML = `
                            <p><strong>–ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è:</strong> ${latestVersionMatch[1]}</p>
                            <p style="margin-top: 10px;"><strong>–°–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π:</strong></p>
                            <div style="max-height: 200px; overflow-y: auto; background: #444; padding: 10px; border-radius: 5px;">
                                <pre style="margin: 0;">${latestChanges.join("\n")}</pre>
                            </div>
                            <p style="margin-top: 10px; font-size: 12px; color: #aaa;">
                                <a href="#" id="showFullChangelog" style="color: #28a745; text-decoration: none;">–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏–π</a>
                            </p>
                        `;

                        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ —Å—Å—ã–ª–∫–µ "–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ª–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é –∏–∑–º–µ–Ω–µ–Ω–∏–π"
                        const showFullChangelogLink = modal.querySelector("#showFullChangelog");
                        showFullChangelogLink.addEventListener("click", (e) => {
                            e.preventDefault();
                            modalContent.innerHTML = `
                                <p><strong>–ü–æ–ª–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π:</strong></p>
                                <div style="max-height: 200px; overflow-y: auto; background: #444; padding: 10px; border-radius: 5px;">
                                    <pre style="margin: 0;">${changelog}</pre>
                                </div>
                            `;
                        });
                    })
                    .catch(error => {
                        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø–∏—Å–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π:", error);
                        modalContent.innerHTML = `<p>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π.</p>`;
                    });
            } else {
                // –ï—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ—Ç
                modalContent.innerHTML = `
                    <p><strong>–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è:</strong> ${currentVersion}</p>
                    <p>–£ –≤–∞—Å —Å–∞–º–∞—è –Ω–æ–≤–∞—è –∏ —Å—Ç–∞–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –ø–æ–∫–∞ –Ω–µ—Ç.</p>
                `;
            }

            // –û—Ç—Å—ã–ª–∫–∞ –∫ Ringo
            const ringoNote = document.createElement("p");
            ringoNote.innerHTML = `
                <span style="font-size: 12px; color: #aaa;">
                    –ï—Å–ª–∏ —É –í–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å–æ —Å–∫—Ä–∏–ø—Ç–æ–º, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ <strong>Ringo</strong>.
                </span>
            `;
            ringoNote.style.marginTop = "10px";

            // –ö–Ω–æ–ø–∫–∞ "–û–±–Ω–æ–≤–∏—Ç—å—Å—è" (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ)
            const updateButton = latestVersionMatch && latestVersionMatch[1] !== currentVersion
                ? (() => {
                    const button = document.createElement("button");
                    button.innerText = "–û–±–Ω–æ–≤–∏—Ç—å—Å—è";
                    button.style.background = "#28a745";
                    button.style.color = "#fff";
                    button.style.border = "none";
                    button.style.padding = "8px 16px";
                    button.style.borderRadius = "5px";
                    button.style.cursor = "pointer";
                    button.style.marginRight = "10px";
                    button.addEventListener("click", () => {
                        window.location.href = "https://raw.githubusercontent.com/Ringoandreu/grnd-helper-android/main/GrndHelper-Android.user.js";
                    });
                    return button;
                })()
                : null;

            // –ö–Ω–æ–ø–∫–∞ "–ó–∞–∫—Ä—ã—Ç—å"
            const closeButton = document.createElement("button");
            closeButton.innerText = "–ó–∞–∫—Ä—ã—Ç—å";
            closeButton.style.background = "#dc3545";
            closeButton.style.color = "#fff";
            closeButton.style.border = "none";
            closeButton.style.padding = "8px 16px";
            closeButton.style.borderRadius = "5px";
            closeButton.style.cursor = "pointer";
            closeButton.addEventListener("click", () => {
                document.body.removeChild(modal);
            });

            // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–Ω–æ–ø–æ–∫
            const buttonContainer = document.createElement("div");
            buttonContainer.style.display = "flex";
            buttonContainer.style.justifyContent = "flex-end";
            buttonContainer.style.marginTop = "10px";

            if (updateButton) buttonContainer.appendChild(updateButton);
            buttonContainer.appendChild(closeButton);

            // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
            modal.appendChild(modalHeader);
            modal.appendChild(modalContent);
            modal.appendChild(ringoNote);
            modal.appendChild(buttonContainer);

            // –î–æ–±–∞–≤–ª—è–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
            document.body.appendChild(modal);
        })
        .catch(error => {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π:", error);
        });
}

    setTimeout(() => {
        addPunishmentForm();
    }, 1500);
})();